<!-- popup -->
<div class="modal fade bs-example-modal-lg  popup popup-v2" id="myModal" tabindex="-1" role="dialog"  aria-hidden="true">
  <div class="modal-dialog  " >
    <div class="modal-content mailchimp-modal-content">

      <div class="modal-header">
        <div class="close-modal">
          <a href="#"  data-dismiss="modal"><i class="fa fa-times"></i></a>
        </div>
      </div>
      <div class="modal-body">
        <div class="popup-content">
          <h3>News Letter</h3>
          <div class="des">Subscribe to the Quato Shop mailing list to receive updates on new arrivals,
            special offers and other discount information.</div>
          <div class="Subcribe">
            <form action="#">
              <input type="email" class="email" placeholder="Enter your email">
              <input type="submit" value="Subscribe" class="submit">
            </form>
          </div>
        </div>
      </div>
      <div class="modal-footer">
        <div class="again-popup">
          <div class="checkbox">
            <input type="checkbox" value="cheque" name="payment_method" id="payment_method">
            <label for="payment_method">Do not show this popup again </label>
          </div>
        </div>
      </div>

    </div>
  </div>
</div>
<script type="text/javascript" charset="utf-8">
  (function (factory) {
    if (typeof define === 'function' && define.amd) {
      // AMD. Register as an anonymous module.
      define(['jquery'], factory);
    } else {
      // Browser globals
      factory(jQuery);
    }
  })(function ($) {
    // Easy Responsive Tabs Plugin
    // Author: Samson.Onna <Email : samson3d@gmail.com>
    $.fn.extend({
      easyResponsiveTabs: function (options) {
        //Set the default values, use comma to separate the settings, example:
        var defaults = {
          type: 'default', //default, vertical, accordion;
          width: 'auto',
          fit: true,
          closed: false,
          tabidentify: '',
          activetab_bg: 'white',
          // inactive_bg: '#F5F5F5',
          active_border_color: '#c1c1c1',
          active_content_border_color: '#c1c1c1',
          activate: function () {
          }
        }
        //Variables
        var options = $.extend(defaults, options);
        var opt = options, jtype = opt.type, jfit = opt.fit, jwidth = opt.width, vtabs = 'vertical', accord = 'accordion';
        var hash = window.location.hash;
        var historyApi = !!(window.history && history.replaceState);

        //Events
        $(this).bind('tabactivate', function (e, currentTab) {
          if (typeof options.activate === 'function') {
            options.activate.call(currentTab, e)
          }
        });

        //Main function
        this.each(function () {
          var $respTabs = $(this);
          var $respTabsList = $respTabs.find('ul.resp-tabs-list.' + options.tabidentify);
          var respTabsId = $respTabs.attr('id');
          $respTabs.find('ul.resp-tabs-list.' + options.tabidentify + ' li').addClass('resp-tab-item').addClass(options.tabidentify);
          $respTabs.css({
            'display': 'block',
            'width': jwidth
          });

          if (options.type == 'vertical')
            $respTabsList.css('margin-top', '3px');

          $respTabs.find('.resp-tabs-container.' + options.tabidentify).css('border-color', options.active_content_border_color);
          $respTabs.find('.resp-tabs-container.' + options.tabidentify + ' > div').addClass('resp-tab-content').addClass(options.tabidentify);
          jtab_options();
          //Properties Function
          function jtab_options() {
            if (jtype == vtabs) {
              $respTabs.addClass('resp-vtabs').addClass(options.tabidentify);
            }
            if (jfit == true) {
              $respTabs.css({ width: '100%', margin: '0px' });
            }
            if (jtype == accord) {
              $respTabs.addClass('resp-easy-accordion').addClass(options.tabidentify);
              $respTabs.find('.resp-tabs-list').css('display', 'none');
            }
          }

          //Assigning the h2 markup to accordion title
          var $tabItemh2;
          $respTabs.find('.resp-tab-content.' + options.tabidentify).before("<h2 class='resp-accordion " + options.tabidentify + "' role='tab'><span class='resp-arrow'></span></h2>");

          $respTabs.find('.resp-tab-content.' + options.tabidentify).prev("h2").css({
            'background-color': options.inactive_bg,
            'border-color': options.active_border_color
          });

          var itemCount = 0;
          $respTabs.find('.resp-accordion').each(function () {
            $tabItemh2 = $(this);
            var $tabItem = $respTabs.find('.resp-tab-item:eq(' + itemCount + ')');
            var $accItem = $respTabs.find('.resp-accordion:eq(' + itemCount + ')');
            $accItem.append($tabItem.html());
            $accItem.data($tabItem.data());
            $tabItemh2.attr('aria-controls', options.tabidentify + '_tab_item-' + (itemCount));
            itemCount++;
          });

          //Assigning the 'aria-controls' to Tab items
          var count = 0,
            $tabContent;
          $respTabs.find('.resp-tab-item').each(function () {
            $tabItem = $(this);
            $tabItem.attr('aria-controls', options.tabidentify + '_tab_item-' + (count));
            $tabItem.attr('role', 'tab');
            $tabItem.css({
              'background-color': options.inactive_bg,
              'border-color': 'none'
            });

            //Assigning the 'aria-labelledby' attr to tab-content
            var tabcount = 0;
            $respTabs.find('.resp-tab-content.' + options.tabidentify).each(function () {
              $tabContent = $(this);
              $tabContent.attr('aria-labelledby', options.tabidentify + '_tab_item-' + (tabcount)).css({
                'border-color': options.active_border_color
              });
              tabcount++;
            });
            count++;
          });

          // Show correct content area
          var tabNum = 0;
          if (hash != '') {
            var matches = hash.match(new RegExp(respTabsId + "([0-9]+)"));
            if (matches !== null && matches.length === 2) {
              tabNum = parseInt(matches[1], 10) - 1;
              if (tabNum > count) {
                tabNum = 0;
              }
            }
          }

          //Active correct tab
          $($respTabs.find('.resp-tab-item.' + options.tabidentify)[tabNum]).addClass('resp-tab-active').css({
            'background-color': options.activetab_bg,
            'border-color': options.active_border_color
          });

          //keep closed if option = 'closed' or option is 'accordion' and the element is in accordion mode
          if (options.closed !== true && !(options.closed === 'accordion' && !$respTabsList.is(':visible')) && !(options.closed === 'tabs' && $respTabsList.is(':visible'))) {
            $($respTabs.find('.resp-accordion.' + options.tabidentify)[tabNum]).addClass('resp-tab-active').css({
              'background-color': options.activetab_bg + ' !important',
              'border-color': options.active_border_color,
              'background': 'none'
            });

            $($respTabs.find('.resp-tab-content.' + options.tabidentify)[tabNum]).addClass('resp-tab-content-active').addClass(options.tabidentify).attr('style', 'display:block');
          }
          //assign proper classes for when tabs mode is activated before making a selection in accordion mode
          else {
            // $($respTabs.find('.resp-tab-content.' + options.tabidentify)[tabNum]).addClass('resp-accordion-closed'); //removed resp-tab-content-active
          }

          //Tab Click action function
          $respTabs.find("[role=tab]").each(function () {

            var $currentTab = $(this);
            $currentTab.click(function () {

              var $currentTab = $(this);
              var $tabAria = $currentTab.attr('aria-controls');

              if ($currentTab.hasClass('resp-accordion') && $currentTab.hasClass('resp-tab-active')) {
                $respTabs.find('.resp-tab-content-active.' + options.tabidentify).slideUp('', function () {
                  $(this).addClass('resp-accordion-closed');
                });
                $currentTab.removeClass('resp-tab-active').css({
                  'background-color': options.inactive_bg,
                  'border-color': 'none'
                });
                return false;
              }
              if (!$currentTab.hasClass('resp-tab-active') && $currentTab.hasClass('resp-accordion')) {
                $respTabs.find('.resp-tab-active.' + options.tabidentify).removeClass('resp-tab-active').css({
                  'background-color': options.inactive_bg,
                  'border-color': 'none'
                });
                $respTabs.find('.resp-tab-content-active.' + options.tabidentify).slideUp().removeClass('resp-tab-content-active resp-accordion-closed');
                $respTabs.find("[aria-controls=" + $tabAria + "]").addClass('resp-tab-active').css({
                  'background-color': options.activetab_bg,
                  'border-color': options.active_border_color
                });

                $respTabs.find('.resp-tab-content[aria-labelledby = ' + $tabAria + '].' + options.tabidentify).slideDown().addClass('resp-tab-content-active');
              } else {
                console.log('here');
                $respTabs.find('.resp-tab-active.' + options.tabidentify).removeClass('resp-tab-active').css({
                  'background-color': options.inactive_bg,
                  'border-color': 'none'
                });

                $respTabs.find('.resp-tab-content-active.' + options.tabidentify).removeAttr('style').removeClass('resp-tab-content-active').removeClass('resp-accordion-closed');

                $respTabs.find("[aria-controls=" + $tabAria + "]").addClass('resp-tab-active').css({
                  'background-color': options.activetab_bg,
                  'border-color': options.active_border_color
                });

                $respTabs.find('.resp-tab-content[aria-labelledby = ' + $tabAria + '].' + options.tabidentify).addClass('resp-tab-content-active').attr('style', 'display:block');
              }
              //Trigger tab activation event
              $currentTab.trigger('tabactivate', $currentTab);

              //Update Browser History
              if (historyApi) {
                var currentHash = window.location.hash;
                var tabAriaParts = $tabAria.split('tab_item-');
                // var newHash = respTabsId + (parseInt($tabAria.substring(9), 10) + 1).toString();
                var newHash = respTabsId + (parseInt(tabAriaParts[1], 10) + 1).toString();
                if (currentHash != "") {
                  var re = new RegExp(respTabsId + "[0-9]+");
                  if (currentHash.match(re) != null) {
                    newHash = currentHash.replace(re, newHash);
                  }
                  else {
                    newHash = currentHash + "|" + newHash;
                  }
                }
                else {
                  newHash = '#' + newHash;
                }

                history.replaceState(null, null, newHash);
              }
            });

          });

          //Window resize function
          $(window).resize(function () {
            $respTabs.find('.resp-accordion-closed').removeAttr('style');
          });
        });
      }
    });
  });

</script>
<script>
  $(window).load(function(){
    var width = $(window).width()
    if(width>=1024){
      $('#myModal').modal('show');
    }

  });
  // popup
  $('.popup-v1').each(function(){
    $('.popup-v1').on('shown.bs.modal', function () {
      $('.modal-full').addClass('showpopup');
    })
    $('.popup-v1').on('hidden.bs.modal', function () {
      $('.modal-full').removeClass('showpopup');
    })
  })
</script>
<script>
  new WOW().init();
</script>
<script>
  var swiper = new Swiper('.about-sl', {
    pagination: '.swiper-pagination',
    paginationClickable: true
  });
  var swiper = new Swiper('.swiper-main',{
    pagination: '.swiper-pagination',
    paginationClickable: true
  });
  var swiperproduct = new Swiper('.swiper-product',{
    slidesPerView: 3,
    touchRatio: 0.2,
    loop:true,
    centeredSlides: true,
    loopedSlides: 3, //looped slides should be the same
    slideToClickedSlide: true,
    //        autoplay: 3000
    //        autoplayDisableOnInteraction: false
  })


  var tesimonial = new Swiper('.testimonial-content-gallery', {
    loop:true,
    centeredSlides: true,
    loopedSlides: 5 //looped slides should be the same
  });
  var tesimonialThumbs = new Swiper('.testimonial-thumbs', {
    slidesPerView: 5,
    touchRatio: 0.2,
    loop:true,
    centeredSlides: true,
    loopedSlides: 5, //looped slides should be the same
    slideToClickedSlide: true
  });
  tesimonial.params.control = tesimonialThumbs;
  tesimonialThumbs.params.control = tesimonial;
</script>
<script type="text/javascript">
  $(document).ready(function () {

    $('#parentHorizontalTab').easyResponsiveTabs({
      type: 'default', //Types: default, vertical, accordion
      width: 'auto', //auto or any width like 600px
      fit: true, // 100% fit in a container
      closed: 'accordion', // Start closed if in accordion view
      tabidentify: 'hor_1', // The tab groups identifier
      activate: function (event) { // Callback function if tab is switched
        var $tab = $(this);
        var $info = $('#nested-tabInfo');
        var $name = $('span', $info);

        $name.text($tab.text());

        $info.show();
      }
    });

    $('#ChildVerticalTab_1').easyResponsiveTabs({
      type: 'vertical',
      width: 'auto',
      fit: true,
      tabidentify: 'ver_1', // The tab groups identifier
      activetab_bg: '#fff', // background color for active tabs in this group
      // inactive_bg: '#F5F5F5', // background color for inactive tabs in this group
      // active_border_color: '#c1c1c1', // border color for active tabs heads in this group
      // active_content_border_color: '#5AB1D0' // border color for active tabs contect in this group so that it matches the tab head border
    });

  });
</script>